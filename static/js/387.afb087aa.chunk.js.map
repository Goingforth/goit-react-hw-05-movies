{"version":3,"file":"static/js/387.afb087aa.chunk.js","mappings":"0PACaA,EAAeC,EAAAA,EAAAA,IAAH,mEAKZC,EAAcD,EAAAA,EAAAA,GAAH,4G,SCqCxB,EArCgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAUA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,IAAmBP,IACxBQ,MAAK,SAAAC,GAAO,OAAIA,EAAQC,OAAZ,IACZF,MAAK,SAAAC,GAAO,OACXA,EAAQE,KAAI,kBAA8B,CAAEC,GAAhC,EAAGA,GAAiCC,OAApC,EAAOA,OAAqCC,QAA5C,EAAeA,QAAf,GADD,IAGZN,MAAK,SAAAC,GAAO,OAAIL,EAAeK,EAAnB,GAChB,GAAE,CAACT,KAGF,SAACH,EAAD,UACGM,EAAYY,OAAS,GAEpB,yBACGZ,EAAYQ,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,UAACf,EAAD,YACE,yBACE,qCAAac,QAEf,wBAAKC,MAJWF,EAOrB,OAIH,0BACE,qEAKT,C,8FCxCc,SAAeN,EAA9B,+CAAe,OAAf,oBAAe,WAAuBU,GAAvB,gGAEQC,EAAAA,EAAAA,QAAcD,GAASR,MAAK,SAAAU,GAC7C,OAAOA,EAASC,IACjB,IAJU,cAELA,EAFK,yBAKJA,GALI,gCAOXC,QAAQC,MAAR,MAPW,gF,oKCFTC,EAAY,+BACZC,EAAiB,CACrBC,OAAQ,MACRC,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,GAAkB,kBAC1BP,GAD0B,IAE7BQ,IAAI,GAAD,OAAKT,EAAL,yBAIQU,EAAmB,SAAAhC,GAAO,yBAClCuB,GADkC,IAErCQ,IAAI,GAAD,OAAKT,EAAL,kBAAwBtB,IAFU,EAO1BiC,EAAqB,SAAAC,GAAK,yBAClCX,GADkC,IAErCQ,IAAI,GAAD,OAAKT,EAAL,iBACHG,OAAQ,CACNS,MAAM,GAAD,OAAKA,GACVC,KAAM,IACNT,SAAU,UANyB,EAY1BU,EAAkB,SAAApC,GAAO,yBACjCuB,GADiC,IAEpCQ,IAAI,GAAD,OAAKT,EAAL,kBAAwBtB,EAAxB,aAFiC,EAOzBO,EAAqB,SAAAP,GAAO,yBACpCuB,GADoC,IAEvCQ,IAAI,GAAD,OAAKT,EAAL,kBAAwBtB,EAAxB,YACHyB,OAAQ,CAAEC,SAAU,QAASS,KAAM,MAHI,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","service/API/getData.js","service/API/options.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const BlockReviews = styled.div`\n  margin-top: 12px;\n  margin-left: 36px;\n`;\n\nexport const BlockReview = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  margin-bottom: 20px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport getData from 'service/API/getData';\nimport { optionsReviewsByID } from 'service/API/options';\nimport { BlockReviews, BlockReview } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n  useEffect(() => {\n    getData(optionsReviewsByID(movieId))\n      .then(reviews => reviews.results)\n      .then(reviews =>\n        reviews.map(({ id, author, content }) => ({ id, author, content }))\n      )\n      .then(reviews => setReviewsInfo(reviews));\n  }, [movieId]);\n\n  return (\n    <BlockReviews>\n      {reviewsInfo.length > 0 ? (\n        // <BlockReviews>\n        <div>\n          {reviewsInfo.map(({ id, author, content }) => {\n            return (\n              <BlockReview key={id}>\n                <li>\n                  <h4>Author: {author}</h4>\n                </li>\n                <li>{content}</li>\n              </BlockReview>\n            );\n          })}\n        </div>\n      ) : (\n        // </BlockReviews>\n        <div>\n          <h2>We don't have reviews for this movie.</h2>\n        </div>\n      )}\n    </BlockReviews>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nexport default async function getData(options) {\n  try {\n    const data = await axios.request(options).then(response => {\n      return response.data;\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","const BASE__URL = 'https://api.themoviedb.org/3';\nconst optionsDefault = {\n  method: 'GET',\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZjc0YjdkOTk5OTdiNWYzYzQ0MGY3YTgxMzBmZGE1NCIsInN1YiI6IjY0NmYwODk2MTdjNDQzMDBhOWVkYWQ4MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.XtyRL4EwN0GuyLC3DZJht20wxfHDS1peFCSQYFLhH6Q',\n  },\n};\n// search trend movies\nexport const optionsTrendMovies = {\n  ...optionsDefault,\n  url: `${BASE__URL}/trending/movie/day`,\n};\n//search for ID\n\nexport const optionsMovieByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}`,\n});\n\n// search for name\n\nexport const optionsSearchQuery = query => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/search/movie`,\n  params: {\n    query: `${query}`,\n    page: '1',\n    language: 'en-US',\n  },\n});\n\n// cast - artist\n\nexport const optionsCastByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}/credits`,\n});\n\n//reviews\n\nexport const optionsReviewsByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}/reviews`,\n  params: { language: 'en-US', page: '1' },\n});\n"],"names":["BlockReviews","styled","BlockReview","movieId","useParams","useState","reviewsInfo","setReviewsInfo","useEffect","getData","optionsReviewsByID","then","reviews","results","map","id","author","content","length","options","axios","response","data","console","error","BASE__URL","optionsDefault","method","params","language","headers","accept","Authorization","optionsTrendMovies","url","optionsMovieByID","optionsSearchQuery","query","page","optionsCastByID"],"sourceRoot":""}