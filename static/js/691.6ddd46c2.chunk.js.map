{"version":3,"file":"static/js/691.6ddd46c2.chunk.js","mappings":"wMACaA,EAAaC,EAAAA,EAAAA,GAAH,oJASVC,EAAYD,EAAAA,EAAAA,GAAH,8H,SCQtB,EAfqB,SAAC,GAAuC,IAArCE,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC3C,OACE,SAACL,EAAD,UACGG,EAAYG,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACtB,OACE,SAACN,EAAD,WACE,SAAC,KAAD,CAAMO,GAAE,UAAKL,GAAL,OAAcG,GAAMG,MAAO,CAAEC,KAAMN,GAA3C,SACGG,KAFWD,EAMnB,KAGN,C,sKChBYK,EAAaX,EAAAA,EAAAA,KAAH,+HAQVY,EAAYZ,EAAAA,EAAAA,MAAH,8PAcTa,EAAab,EAAAA,EAAAA,OAAH,4C,SC2CvB,EAtDe,WACb,OAAwCc,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMZ,GAAWa,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,UAEpCC,EAAAA,EAAAA,YAAU,WACW,OAAfF,IAGJG,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,IAAmBJ,IACxBK,MAAK,SAAAC,GAAK,OAAIA,EAAMC,OAAV,IACVF,MAAK,SAAAC,GAAK,OACTA,EAAMtB,KAAI,kBAA6B,CACrCC,GADQ,EAAGA,GAEXC,eAFQ,EAAOA,eAAP,GADD,IAMVmB,MAAK,SAAAC,GAAK,OAAIX,EAAgBW,EAApB,GACd,GAAE,CAACN,IAaJ,OACE,4BACE,UAACV,EAAD,CAAYkB,SAbK,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXC,EAAQF,EAAKG,SAASC,YAAYC,MACnB,KAAjBH,EAAMI,QAIVlB,EAAgB,CAAEc,MAAOA,IACzBF,EAAKO,SAJHC,EAAAA,GAAAA,MAAY,gCAKf,EAGG,WACE,SAAC5B,EAAD,CACE6B,KAAK,OACLC,KAAK,cACLC,aAAa,MACbC,WAAW,EACXC,YAAY,2BAGd,SAAChC,EAAD,CAAY4B,KAAK,SAAjB,wBAEF,SAACK,EAAA,EAAD,CACE5C,YAAaa,EACbZ,OAAQ,GACRC,SAAUA,MAIjB,C,8FC/Dc,SAAeoB,EAA9B,+CAAe,OAAf,oBAAe,WAAuBuB,GAAvB,gGAEQC,EAAAA,EAAAA,QAAcD,GAASrB,MAAK,SAAAuB,GAC7C,OAAOA,EAASC,IACjB,IAJU,cAELA,EAFK,yBAKJA,GALI,gCAOXC,QAAQC,MAAR,MAPW,gF,oKCFTC,EAAY,+BACZC,EAAiB,CACrBC,OAAQ,MACRC,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,GAAkB,kBAC1BP,GAD0B,IAE7BQ,IAAI,GAAD,OAAKT,EAAL,yBAIQU,EAAmB,SAAAC,GAAO,yBAClCV,GADkC,IAErCQ,IAAI,GAAD,OAAKT,EAAL,kBAAwBW,IAFU,EAO1BvC,EAAqB,SAAAS,GAAK,yBAClCoB,GADkC,IAErCQ,IAAI,GAAD,OAAKT,EAAL,iBACHG,OAAQ,CACNtB,MAAM,GAAD,OAAKA,GACV+B,KAAM,IACNR,SAAU,UANyB,EAY1BS,EAAkB,SAAAF,GAAO,yBACjCV,GADiC,IAEpCQ,IAAI,GAAD,OAAKT,EAAL,kBAAwBW,EAAxB,aAFiC,EAOzBG,EAAqB,SAAAH,GAAO,yBACpCV,GADoC,IAEvCQ,IAAI,GAAD,OAAKT,EAAL,kBAAwBW,EAAxB,YACHR,OAAQ,CAAEC,SAAU,QAASQ,KAAM,MAHI,C","sources":["components/MoviesScroll/MoviesScroll.styled.jsx","components/MoviesScroll/MoviesScroll.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","service/API/getData.js","service/API/options.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  margin-top: 16px;\n  margin-left: 16px;\n  padding-left: 24px;\n`;\n\nexport const MovieLink = styled.li`\n  list-style-type: none;\n  &::before {\n    content: 'ðŸŽ¦';\n    padding-right: 12px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MovieLink, MoviesList } from './MoviesScroll.styled';\nconst MoviesScroll = ({ arrayMovies, pathID, location }) => {\n  return (\n    <MoviesList>\n      {arrayMovies.map(({ id, original_title }) => {\n        return (\n          <MovieLink key={id}>\n            <Link to={`${pathID}${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </MovieLink>\n        );\n      })}\n    </MoviesList>\n  );\n};\nexport default MoviesScroll;\nMoviesScroll.propTypes = {\n  id: PropTypes.number,\n  original_title: PropTypes.string,\n};\n","import styled from '@emotion/styled';\nexport const FormSearch = styled.form`\n  display: flex;\n  margin-left: 24px;\n  margin-top: 18px;\n  // cursor: pointer;\n  //margin: 24px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  margin-right: 6px;\n  padding: 6px;\n  padding-left: 20px;\n  border: 1px solid;\n  border-radius: 2px;\n  &:focus,\n  &:active {\n    border-color: var(--input-border);\n    outline: var(--input-border);\n  }\n`;\n\nexport const FormButton = styled.button`\n  cursor: pointer;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport getData from 'service/API/getData';\nimport { optionsSearchQuery } from 'service/API/options';\n\nimport { toast } from 'react-toastify';\n\nimport MoviesScroll from 'components/MoviesScroll/MoviesScroll';\nimport { FormSearch, FormInput, FormButton } from './Movies.styled';\n\nconst Movies = () => {\n  const [filmsByQuery, setFilmsByQuery] = useState([]);\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const querySaved = searchParams.get('query');\n\n  useEffect(() => {\n    if (querySaved === null) {\n      return;\n    }\n    getData(optionsSearchQuery(querySaved))\n      .then(films => films.results)\n      .then(films =>\n        films.map(({ id, original_title }) => ({\n          id,\n          original_title,\n        }))\n      )\n      .then(films => setFilmsByQuery(films));\n  }, [querySaved]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const query = form.elements.searchQuery.value;\n    if (query.trim() === '') {\n      toast.error('Please enter a search topic !');\n      return;\n    }\n    setSearchParams({ query: query });\n    form.reset();\n  };\n  return (\n    <div>\n      <FormSearch onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"searchQuery\"\n          autocomplete=\"off\"\n          autoFocus={true}\n          placeholder=\"Search movies by name\"\n        />\n\n        <FormButton type=\"submit\">Search</FormButton>\n      </FormSearch>\n      <MoviesScroll\n        arrayMovies={filmsByQuery}\n        pathID={''}\n        location={location}\n      />\n    </div>\n  );\n};\nexport default Movies;\nMovies.propTypes = {\n  id: PropTypes.number,\n  original_title: PropTypes.string,\n};\n","import axios from 'axios';\n\nexport default async function getData(options) {\n  try {\n    const data = await axios.request(options).then(response => {\n      return response.data;\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","const BASE__URL = 'https://api.themoviedb.org/3';\nconst optionsDefault = {\n  method: 'GET',\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZjc0YjdkOTk5OTdiNWYzYzQ0MGY3YTgxMzBmZGE1NCIsInN1YiI6IjY0NmYwODk2MTdjNDQzMDBhOWVkYWQ4MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.XtyRL4EwN0GuyLC3DZJht20wxfHDS1peFCSQYFLhH6Q',\n  },\n};\n// search trend movies\nexport const optionsTrendMovies = {\n  ...optionsDefault,\n  url: `${BASE__URL}/trending/movie/day`,\n};\n//search for ID\n\nexport const optionsMovieByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}`,\n});\n\n// search for name\n\nexport const optionsSearchQuery = query => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/search/movie`,\n  params: {\n    query: `${query}`,\n    page: '1',\n    language: 'en-US',\n  },\n});\n\n// cast - artist\n\nexport const optionsCastByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}/credits`,\n});\n\n//reviews\n\nexport const optionsReviewsByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}/reviews`,\n  params: { language: 'en-US', page: '1' },\n});\n"],"names":["MoviesList","styled","MovieLink","arrayMovies","pathID","location","map","id","original_title","to","state","from","FormSearch","FormInput","FormButton","useState","filmsByQuery","setFilmsByQuery","useLocation","useSearchParams","searchParams","setSearchParams","querySaved","get","useEffect","getData","optionsSearchQuery","then","films","results","onSubmit","evt","preventDefault","form","currentTarget","query","elements","searchQuery","value","trim","reset","toast","type","name","autocomplete","autoFocus","placeholder","MoviesScroll","options","axios","response","data","console","error","BASE__URL","optionsDefault","method","params","language","headers","accept","Authorization","optionsTrendMovies","url","optionsMovieByID","movieId","page","optionsCastByID","optionsReviewsByID"],"sourceRoot":""}