{"version":3,"file":"static/js/476.e26f9ac0.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","service/API/getData.js","service/API/options.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BlokMovieDetails = styled.div`\n  display: flex;\n  margin-top: 12px;\n\n  border-bottom: 2px solid var(--botton-border);\n  box-shadow: 0 5px 5px -5px rgba(0, 0, 0, 0.5);\n`;\nexport const Poster = styled.img`\n  max-width: 260px;\n  max-height: 260px;\n  padding-right: 24px;\n  padding-bottom: 12px;\n  object-fit: cover;\n`;\n\nexport const Details = styled.ul`\n  padding-top: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding-bottom: 12px;\n  list-style-type: none;\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding-top: 12px;\n  padding-bottom: 12px;\n  padding-left: 12px;\n  border-bottom: 2px solid var(--botton-border);\n  box-shadow: 0 5px 5px -5px rgba(0, 0, 0, 0.5);\n`;\nexport const AdditionalInfoItems = styled.ul`\n  padding-top: 12px;\n  padding-left: 24px;\n`;\n\nexport const ButtonGoBack = styled.div`\n  margin: 14px;\n`;\n\nexport const LinkGoBack = styled(NavLink)`\n  /* color: var(--black-color); */\n\n  padding: 4px 10px;\n\n  border-radius: 4px;\n  text-decoration: none;\n  font-size: 10px;\n\n  background-color: var(--lightgrey-color);\n\n  &:hover,\n  &:focus {\n    color: var(--blue-color);\n    background-color: var(--buttonGoBack-color);\n    cursor: pointer;\n  }\n`;\n","import { useEffect, useRef, useState, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport getData from 'service/API/getData';\nimport { optionsMovieByID } from 'service/API/options';\nimport {\n  BlokMovieDetails,\n  Poster,\n  Details,\n  AdditionalInfo,\n  AdditionalInfoItems,\n  LinkGoBack,\n  ButtonGoBack,\n} from './MovieDetails.styled';\nimport noposter from '../../images/noposter.jpg';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([\n    // { id: 28, name: 'Action' },\n    // { id: 53, name: 'Thriller' },\n    // { id: 80, name: 'Crime' },\n  ]);\n  const location = useLocation();\n  const backLinklocationRef = useRef(location.state?.from ?? '/');\n\n  // const [genresString, setGenresString] = useState('');\n\n  useEffect(() => {\n    getData(optionsMovieByID(movieId)).then(\n      ({\n        poster_path,\n        original_title,\n        title,\n        overview,\n        genres,\n        popularity,\n      }) => {\n        setMovie({\n          poster_path,\n          original_title,\n          title,\n          overview,\n          genres,\n          popularity,\n        });\n      }\n    );\n    //.then(() => (genresData = movie.genres));\n  }, [movieId]);\n\n  // const genrisData = () => {\n  //   let tempGenres = [];\n  //   movie.genres.forEach(genre => {\n  //     tempGenres.push(genre.name);\n  //   });\n  //   let tempGenresString = tempGenres.join(', ');\n  //   return tempGenresString;\n  // };\n  // console.log(genrisData());\n\n  return (\n    <div>\n      <ButtonGoBack>\n        <LinkGoBack to={backLinklocationRef.current}>\n          &#8656; Go back\n        </LinkGoBack>\n      </ButtonGoBack>\n\n      {/* <Link to={backLinklocationRef.current}>\n        <ButtonGoBack>Go back</ButtonGoBack>\n      </Link> */}\n      <BlokMovieDetails>\n        {movie.poster_path !== null ? (\n          <Poster\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n          />\n        ) : (\n          <Poster src={noposter} alt={movie.title} />\n        )}\n\n        <Details>\n          <li>\n            <h2>{movie.original_title}</h2>\n          </li>\n          <li>\n            <h4>Popularity </h4>\n          </li>\n          <li>{movie.popularity}</li>\n          <li>\n            <h4>Overview</h4>\n          </li>\n          <li>{movie.overview}</li>\n          <li>\n            <h4>Genres</h4>\n          </li>\n          <li>genrisData</li>\n        </Details>\n      </BlokMovieDetails>\n      <AdditionalInfo>\n        <h4>Additional information</h4>\n        <AdditionalInfoItems>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </AdditionalInfoItems>\n      </AdditionalInfo>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport default async function getData(options) {\n  try {\n    const data = await axios.request(options).then(response => {\n      return response.data;\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","const BASE__URL = 'https://api.themoviedb.org/3';\nconst optionsDefault = {\n  method: 'GET',\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZjc0YjdkOTk5OTdiNWYzYzQ0MGY3YTgxMzBmZGE1NCIsInN1YiI6IjY0NmYwODk2MTdjNDQzMDBhOWVkYWQ4MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.XtyRL4EwN0GuyLC3DZJht20wxfHDS1peFCSQYFLhH6Q',\n  },\n};\n// search trend movies\nexport const optionsTrendMovies = {\n  ...optionsDefault,\n  url: `${BASE__URL}/trending/movie/day`,\n};\n//search for ID\n\nexport const optionsMovieByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}`,\n});\n\n// search for name\n\nexport const optionsSearchQuery = query => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/search/movie`,\n  params: {\n    query: `${query}`,\n    page: '1',\n    language: 'en-US',\n  },\n});\n\n// cast - artist\n\nexport const optionsCastByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}/credits`,\n});\n\n//reviews\n\nexport const optionsReviewsByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}/reviews`,\n  params: { language: 'en-US', page: '1' },\n});\n"],"names":["BlokMovieDetails","styled","Poster","Details","AdditionalInfo","AdditionalInfoItems","ButtonGoBack","LinkGoBack","NavLink","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinklocationRef","useRef","state","from","useEffect","getData","optionsMovieByID","then","poster_path","original_title","title","overview","genres","popularity","to","current","src","alt","noposter","Suspense","fallback","options","axios","response","data","console","error","BASE__URL","optionsDefault","method","params","language","headers","accept","Authorization","optionsTrendMovies","url","optionsSearchQuery","query","page","optionsCastByID","optionsReviewsByID"],"sourceRoot":""}