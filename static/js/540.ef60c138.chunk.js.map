{"version":3,"file":"static/js/540.ef60c138.chunk.js","mappings":"wMACaA,EAAaC,EAAAA,EAAAA,GAAH,oJASVC,EAAYD,EAAAA,EAAAA,GAAH,8H,SCOtB,EAfqB,SAAC,GAAuC,IAArCE,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC3C,OACE,SAACL,EAAD,UACGG,EAAYG,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACtB,OACE,SAACN,EAAD,WACE,SAAC,KAAD,CAAMO,GAAE,UAAKL,GAAL,OAAcG,GAAMG,MAAO,CAAEC,KAAMN,GAA3C,SACGG,KAFWD,EAMnB,KAGN,C,wICdYK,E,OAAiBX,EAAAA,GAAH,2G,SCgC3B,EA1BiB,WACf,OAAoCY,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMV,GAAWW,EAAAA,EAAAA,MAajB,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAQC,EAAAA,IACLC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,OAAV,IACVF,MAAK,SAAAC,GAAK,OACTA,EAAMf,KAAI,kBAA6B,CACrCC,GADQ,EAAGA,GAEXC,eAFQ,EAAOA,eAAP,GADD,IAMVY,MAAK,SAAAC,GAAK,OAAIN,EAAcM,EAAlB,GACd,GAAE,KAGD,4BACE,SAACT,EAAD,8BACA,SAACW,EAAA,EAAD,CACEpB,YAAaW,EACbV,OAAQ,UACRC,SAAUA,MAIjB,C,8FC/Bc,SAAea,EAA9B,+CAAe,OAAf,oBAAe,WAAuBM,GAAvB,gGAEQC,EAAAA,EAAAA,QAAcD,GAASJ,MAAK,SAAAM,GAC7C,OAAOA,EAASC,IACjB,IAJU,cAELA,EAFK,yBAKJA,GALI,gCAOXC,QAAQC,MAAR,MAPW,gF,oKCFTC,EAAY,+BACZC,EAAiB,CACrBC,OAAQ,MACRC,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOlB,GAAkB,kBAC1BY,GAD0B,IAE7BO,IAAI,GAAD,OAAKR,EAAL,yBAIQS,EAAmB,SAAAC,GAAO,yBAClCT,GADkC,IAErCO,IAAI,GAAD,OAAKR,EAAL,kBAAwBU,IAFU,EAO1BC,EAAqB,SAAAC,GAAK,yBAClCX,GADkC,IAErCO,IAAI,GAAD,OAAKR,EAAL,iBACHG,OAAQ,CACNS,MAAM,GAAD,OAAKA,GACVC,KAAM,IACNT,SAAU,UANyB,EAY1BU,EAAkB,SAAAJ,GAAO,yBACjCT,GADiC,IAEpCO,IAAI,GAAD,OAAKR,EAAL,kBAAwBU,EAAxB,aAFiC,EAOzBK,EAAqB,SAAAL,GAAO,yBACpCT,GADoC,IAEvCO,IAAI,GAAD,OAAKR,EAAL,kBAAwBU,EAAxB,YACHP,OAAQ,CAAEC,SAAU,QAASS,KAAM,MAHI,C","sources":["components/MoviesScroll/MoviesScroll.styled.jsx","components/MoviesScroll/MoviesScroll.jsx","pages/HomePage/Homepage.styled.jsx","pages/HomePage/HomePage.jsx","service/API/getData.js","service/API/options.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  margin-top: 16px;\n  margin-left: 16px;\n  padding-left: 24px;\n`;\n\nexport const MovieLink = styled.li`\n  list-style-type: none;\n  &::before {\n    content: 'ðŸŽ¦';\n    padding-right: 12px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { MovieLink, MoviesList } from './MoviesScroll.styled';\nconst MoviesScroll = ({ arrayMovies, pathID, location }) => {\n  return (\n    <MoviesList>\n      {arrayMovies.map(({ id, original_title }) => {\n        return (\n          <MovieLink key={id}>\n            <Link to={`${pathID}${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </MovieLink>\n        );\n      })}\n    </MoviesList>\n  );\n};\nexport default MoviesScroll;\n","import styled from '@emotion/styled';\n\nexport const TrendingHeader = styled.h1`\n  margin: 0;\n  padding-top: 12px;\n  padding-bottom: 6px;\n  padding-left: 12px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport getData from 'service/API/getData';\nimport { optionsTrendMovies } from 'service/API/options';\n\nimport MoviesScroll from 'components/MoviesScroll/MoviesScroll';\nimport { TrendingHeader } from './Homepage.styled';\n\nconst HomePage = () => {\n  const [trendFilms, setTrendFilms] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    getData(optionsTrendMovies)\n      .then(films => films.results)\n      .then(films =>\n        films.map(({ id, original_title }) => ({\n          id,\n          original_title,\n        }))\n      )\n      .then(films => setTrendFilms(films));\n  }, []);\n\n  return (\n    <div>\n      <TrendingHeader>Trending today</TrendingHeader>\n      <MoviesScroll\n        arrayMovies={trendFilms}\n        pathID={'movies/'}\n        location={location}\n      />\n    </div>\n  );\n};\nexport default HomePage;\n","import axios from 'axios';\n\nexport default async function getData(options) {\n  try {\n    const data = await axios.request(options).then(response => {\n      return response.data;\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","const BASE__URL = 'https://api.themoviedb.org/3';\nconst optionsDefault = {\n  method: 'GET',\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZjc0YjdkOTk5OTdiNWYzYzQ0MGY3YTgxMzBmZGE1NCIsInN1YiI6IjY0NmYwODk2MTdjNDQzMDBhOWVkYWQ4MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.XtyRL4EwN0GuyLC3DZJht20wxfHDS1peFCSQYFLhH6Q',\n  },\n};\n// search trend movies\nexport const optionsTrendMovies = {\n  ...optionsDefault,\n  url: `${BASE__URL}/trending/movie/day`,\n};\n//search for ID\n\nexport const optionsMovieByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}`,\n});\n\n// search for name\n\nexport const optionsSearchQuery = query => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/search/movie`,\n  params: {\n    query: `${query}`,\n    page: '1',\n    language: 'en-US',\n  },\n});\n\n// cast - artist\n\nexport const optionsCastByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}/credits`,\n});\n\n//reviews\n\nexport const optionsReviewsByID = movieId => ({\n  ...optionsDefault,\n  url: `${BASE__URL}/movie/${movieId}/reviews`,\n  params: { language: 'en-US', page: '1' },\n});\n"],"names":["MoviesList","styled","MovieLink","arrayMovies","pathID","location","map","id","original_title","to","state","from","TrendingHeader","useState","trendFilms","setTrendFilms","useLocation","useEffect","getData","optionsTrendMovies","then","films","results","MoviesScroll","options","axios","response","data","console","error","BASE__URL","optionsDefault","method","params","language","headers","accept","Authorization","url","optionsMovieByID","movieId","optionsSearchQuery","query","page","optionsCastByID","optionsReviewsByID"],"sourceRoot":""}